name: Package and Push Helm Chart

on:
  release:
    types: [published]
  push:
    branches: [main, master]
    paths:
      - 'charts/carbon-aware-scheduler/**'
      - '.github/workflows/helm-chart-publish.yml'
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.GCP_ARTIFACT_REGISTRY_URL }}
  CHART_PATH: ./charts/carbon-aware-scheduler
  CHART_NAME: scheduler/chart

jobs:
  package-and-push:
    name: Package and Push Helm Chart
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Needed for GCP authentication

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Google Cloud authentication
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          token_format: 'access_token'

      # Install Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      # Install gcloud CLI
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      # Configure Docker for Artifact Registry (needed for Helm OCI)
      - name: Set up GCP Docker auth
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY }} --quiet

      # Update chart version if this is a release
      - name: Update Chart version for release
        if: github.event_name == 'release'
        run: |
          # Get the version from the GitHub release (without 'v' prefix)
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
          
          # Update Chart.yaml with the new version
          sed -i "s/^version:.*/version: ${VERSION}/" ${{ env.CHART_PATH }}/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${VERSION}\"/" ${{ env.CHART_PATH }}/Chart.yaml
          
          echo "Updated chart version to ${VERSION}"
          cat ${{ env.CHART_PATH }}/Chart.yaml

      # Package Helm chart
      - name: Package Helm chart
        run: |
          helm package ${{ env.CHART_PATH }}

      # Get chart info for pushing
      - name: Get chart info
        id: chart-info
        run: |
          CHART_NAME=$(grep "^name:" ${{ env.CHART_PATH }}/Chart.yaml | awk '{print $2}')
          CHART_VERSION=$(grep "^version:" ${{ env.CHART_PATH }}/Chart.yaml | awk '{print $2}')
          echo "CHART_NAME=${CHART_NAME}" >> $GITHUB_ENV
          echo "CHART_VERSION=${CHART_VERSION}" >> $GITHUB_ENV
          echo "Chart name: ${CHART_NAME}, version: ${CHART_VERSION}"

      # Push Helm chart to Artifact Registry
      - name: Push Helm chart to Artifact Registry
        run: |
          # Create a tag for the chart
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAG="${{ env.CHART_VERSION }}"
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            TAG="dev-$(git rev-parse --short HEAD)"
          else
            TAG="dev-$(date +%s)"
          fi
          
          echo "Pushing chart with tag: ${TAG}"
          
          # Push the chart to Artifact Registry using Helm OCI support
          helm push ${{ env.CHART_NAME }}-${{ env.CHART_VERSION }}.tgz oci://${{ env.REGISTRY }}/${{ env.CHART_NAME }}
          
          echo "Successfully pushed Helm chart to Artifact Registry"
