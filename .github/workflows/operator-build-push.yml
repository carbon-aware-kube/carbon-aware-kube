name: Build and Push Operator Docker Image

on:
  release:
    types: [published]
  push:
    branches: [main, master]
    paths:
      - 'operator/**'
      - '.github/workflows/operator-build-push.yml'
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.GCP_ARTIFACT_REGISTRY_URL }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE_NAME: carbon-aware-scheduler/operator

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Needed for GCP authentication

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Google Cloud authentication
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          token_format: 'access_token'

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker
      - uses: 'docker/login-action@v1'
        with:
          registry: ${{ env.REGISTRY }}
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      # Extract metadata for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}
            type=raw,value=dev,enable=${{ github.event_name == 'push' }}
            type=sha,format=short,enable=${{ github.event_name == 'push' }}

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      # Set image tag based on event type
      - name: Set image tag
        id: set-tag
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # For releases, use the tag without the 'v' prefix
            TAG="${{ github.event.release.tag_name }}"
            TAG="${TAG#v}"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            # For pushes to main/master, use 'dev' plus short commit SHA
            TAG="dev-$(git rev-parse --short HEAD)"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
          else
            # For manual workflow runs, use 'dev' plus timestamp
            TAG="dev-$(date +%s)"
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
          fi
          echo "Using tag: ${TAG}"
      
      # Build and push using Docker action
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./operator
          file: ./operator/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
